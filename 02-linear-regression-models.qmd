# Linear regression models

```{r}
pacman::p_load(tidyverse, magrittr, here, janitor, GLMsData)
```

```{r}
data("gestation")
data <- gestation |> as_tibble() |> clean_names()
data |> glimpse()
```

```{r}
data |> 
  mutate(color = ifelse(births > 20, 'red', 'blue')) |> 
  ggplot(aes(age, weight, color = color)) +
  geom_point() +
  theme(legend.position = 'none')
```

## Simple linear regression

```{r}
y <- data$weight
x <- data$age
w <- data$births

xbar <- weighted.mean(x, w = w)
ybar <- weighted.mean(y, w = w)

SSxy <- sum(w * (x - xbar) * y)
SSx <- sum(w * (x - xbar)^2)

beta1 <- SSxy / SSx
beta0 <- ybar - beta1 * xbar

mu <- beta0 + beta1*x
RSS <- sum(w * (y - mu)^2)

c(beta0 = beta0, beta1 = beta1, RSS = RSS)
```

### Estimating the variance $\sigma^2$

```{r}
df <- length(x) - 2
s2 <- RSS / df

c(df = df, s = sqrt(s2), s2 = s2)
```

### Standard errors of the coefficients

```{r}
varb0 <- s2 * ( 1/sum(w) + xbar^2 / SSx )
varb1 <- s2 / SSx

sqrt(c(beta0 = varb0, beta1 = varb1))
```

```{r}
lm(y ~ x, weights = w) |> summary()
```

### Standard errors of fitted values

```{r}
x.g <- 30
mu.g <- beta0 + x.g * beta1
var.mu.g <- s2 * (1/sum(w) + (x.g-xbar)^2 / SSx)
se.mu.g <- sqrt(var.mu.g)

c(mu = mu.g, se = sqrt(var.mu.g))
```

## Estimation for multiple regression

```{r}
data('lungcap')
data <- lungcap |> as_tibble() |> clean_names()
data |> glimpse()
```

```{r}
data |> 
  mutate(log_fev = log(fev)) |> 
  select(ht, fev, log_fev) |> 
  pivot_longer(-ht) |> 
  ggplot(aes(ht, value)) +
  geom_point() +
  geom_smooth() +
  facet_wrap(vars(name), scales = 'free_y')
```

## Matrix formulation of linear regression models

```{r}
data %<>%
  mutate(smoke = factor(smoke, 
                        levels = c(0, 1), 
                        labels = c('Non-smoker', 'Smoker')),
         gender = factor(if_else(gender == 'F', 0, 1), 
                         levels = c(0, 1), 
                         labels = c('Female', 'Male')))

X <- data |> model.matrix(formula(~ age + ht + gender + smoke), data = _)
head(X)
```

```{r}
XtX <- t(X) %*% X
y <- log(data$fev)
inv_XtX <- solve(XtX)
XtY <- t(X) %*% y
beta <- inv_XtX %*% XtY; drop(beta)
```

$$
\bar{\mu} = -1.944 + 0.02339Age + 0.04280Height + 0.02932Gender + 0.04607Smoke
$$

```{r}
beta <- solve(XtX, XtY); beta
```

```{r}
QR <- qr(X)
beta <- qr.coef(QR, y); beta
```

#### Estimating the variance $\sigma^2$

```{r}
mu <- X %*% beta
RSS <- sum((y- mu)^2); RSS

s2 <- RSS / (length(y) - length(beta))
c(s = sqrt(s2), s2 = s2)
```

#### Estimating the variance of $\bar{\beta}$

```{r}
var_matrix <- s2 * inv_XtX
var_beta_j <- diag(var_matrix)
sqrt(var_beta_j)
```

#### Estimating the variance of fitted values

```{r}
xg_vec <- matrix(c(1, 18, 66, 0, 1), nrow = 1)
mu_g <- xg_vec %*% beta
var_mu_g <- sqrt(xg_vec %*% (solve(t(X) %*% X)) %*% t(xg_vec) * s2)
c(mu_g, var_mu_g)
```

## Fitting linear regression models

```{r}
data("gestation")
data <- gestation |> as_tibble() |> clean_names()

weighted_fit <- data |> lm(weight ~ age, data = _, weights = births)
weighted_fit |> summary()

fit <- data |> lm(weight ~ age, data = _)
fit |> summary()
```

```{r}
data |> 
  mutate(color = ifelse(births > 20, 'red', 'blue')) |> 
  ggplot(aes(age, weight, color = color)) +
  geom_point() +
  theme(legend.position = 'none') +
  geom_abline(intercept = coef(weighted_fit)[1], slope = coef(weighted_fit)[2]) +
  geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], linetype = 'dashed')
```

#### The random component implies that the variation of the weigths aroun $\mu$ is approximately constant with $s^2 = 0.6010$

```{r}
# Compute variance:
sum(weighted_fit$weights * weighted_fit$residuals^2) / weighted_fit$df.residual

# Another option:
deviance(weighted_fit) / weighted_fit$df.residual
```

```{r}
# Confidence intervals for the parameters
confint(weighted_fit)
```

```{r}
# Confidence intervals for the estimates
predict(weighted_fit, se.fit = TRUE) |> 
  as_tibble() |> 
  bind_cols(data) |> 
  ggplot(aes(age, weight)) +
  geom_point() +
  geom_line(aes(age, fit)) +
  geom_errorbar(aes(ymin = fit - se.fit, 
                    ymax = fit + se.fit))
```

```{r}
new <- tibble(age = 36)
out <- predict(weighted_fit, newdata = new, se.fit = TRUE)

tstar <- qt(weighted_fit$df, p = 0.975)
ci_lo <- out$fit - tstar*out$se.fit
ci_hi <- out$fit + tstar*out$se.fit
ci_info <- cbind(lower = ci_lo, estimate = out$fit, upper = ci_hi)
ci_info
exp(ci_info)
```

## Analysis of variance for regression models

```{r}
data("lungcap")
data <- lungcap |> as_tibble() |> clean_names()
data |> glimpse()
```

```{r}
model <- data |> lm(log(fev) ~ age + ht + gender + smoke, data = _)
```

```{r}
y <- data |> mutate(fev = log(fev)) |> pull('fev')
mu <- fitted(model)
rss <- sum((y - mu)^2)
sst <- sum((y - mean(y))^2)

c(RSS = rss, SST = sst, SSReg = sst - rss)
```

```{r}
r_squared <- 1 - (rss/sst)
adj_r_squared <- 1 - ((rss/(nrow(data) - (length(data) - 1))) / (sst/(nrow(data) - 1)))

c('Output R2' = summary(model)$r.squared,
  'Computed R2' = r_squared,
  'Adjusted R2' = summary(model)$adj.r.squared,
  'Computed Adj R2' = adj_r_squared)
```

```{r}
summary(model)$fstatistic
```

```{r}
anova(model)
```

### Analysis of variance

```{r}
sst <- sum((y - mean(y))^2)
ssReg <- sum((fitted(model) - mean(y))^2)
rss <- sum((y - mu)^2)

round(sst, 5) == round(ssReg + rss, 5)
```

```{r}
df_sy <- (length(data) - 1)
df_rand <- nrow(data) - (length(data) - 1)
```

```{r}
anova <-
  tibble(
    `Source of variation` = c('Systematic component', 'Random component'),
    `Sums of squares` = c(ssReg, rss),
    `Degrees of freedom` = c(df_sy, df_rand)
  ) |>
  mutate(`Mean square` = `Sums of squares` / `Degrees of freedom`,
         'F' = c((anova[1, 4] |> pull() / anova[2, 4] |> pull()), 0))

# Not quite?
anova
```

## Comparing nested models

```{r}

```
